#!/usr/bin/env bash

# Credit: Aixxe @ aixxe.net

csgo_pid=$(pidof csgo_linux64)
filename=$(cat build_id)
filename_old=$(cat build_id_old)

if [ -f build_id ]; then
    if grep -q "$filename" /proc/"$csgo_pid"/maps; then
    echo "unloading $filename"
    sudo gdb -n -q -batch-silent \
        -ex "set logging on" \
        -ex "set logging file /dev/null" \
        -ex "set logging redirect on" \
        -ex "attach $csgo_pid" \
        -ex "set \$dlopen = (void*(*)(char*, int)) dlopen" \
        -ex "set \$dlclose = (int(*)(void*)) dlclose" \
        -ex "set \$library = \$dlopen(\"/usr/lib/$filename\", 6)" \
        -ex "call \$dlclose(\$library)" \
        -ex "call \$dlclose(\$library)" \
        -ex "detach" \
        -ex "quit"
    sudo rm "/usr/lib/${filename}"
    fi
fi

# "build_id_old" is used for unloading in case you rebuild while injected.
if [ -f build_id_old ]; then
    if grep -q "$filename_old" /proc/"$csgo_pid"/maps; then
    echo "unloading old file - $filename_old"
    sudo gdb -n -q -batch-silent \
        -ex "set logging on" \
        -ex "set logging file /dev/null" \
        -ex "set logging redirect on" \
        -ex "attach $csgo_pid" \
        -ex "set \$dlopen = (void*(*)(char*, int)) dlopen" \
        -ex "set \$dlclose = (int(*)(void*)) dlclose" \
        -ex "set \$library = \$dlopen(\"/usr/lib/$filename_old\", 6)" \
        -ex "call \$dlclose(\$library)" \
        -ex "call \$dlclose(\$library)" \
        -ex "detach" \
        -ex "quit"
    sudo rm "/usr/lib/${filename_old}"
    fi
fi

echo "Done. See CS:GO Console."
